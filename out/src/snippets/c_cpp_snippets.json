{
	"main": {
		"prefix": "main",
		"body": [
			"int main(int argc, char const *argv[])\n{\n\t${1:/* code */}\n\treturn 0;\n}\n"
		],
		"description": "main(…)"
	},
	"do": {
		"prefix": "do",
		"body": "do\n{\n\t${1:/* code */}\n} while (${2:/* condition */});\n",
		"description": "Do While Loop "
	},
	"while": {
		"prefix": "while",
		"body": "while(${1:/* condition */})\n{\n\t${2:/* code */}\n}\n",
		"description": "While Loop"
	},
	"for": {
		"prefix": "for",
		"body": "for(int ${1:i} = ${2:0}; ${1:i} < ${3:count}; ${1:i}++)\n{\n\t${4:/* code */}\n}\n",
		"description": "For Loop "
	},
	"forr": {
		"prefix": "forr",
		"body": "for (int ${1:i} = ${2:length} - 1; ${1:i} >= ${3:0}; ${1:i}--)\n{\n\t${4:/* code */}\n}\n",
		"description": "Reverse 'for' loop"
	},
	"if": {
		"prefix": "if",
		"body": "if(${1:/* condition */})\n{\n\t${0:/* code */}\n}\n",
		"description": "if(…)"
	},
	"else": {
		"prefix": "else",
		"body": "else \n{\n\t${1:/* code */}\n}",
		"description": "else {…}"
	},
	"elseif": {
		"prefix": "elseif",
		"body": "else if(${1:/* condition */})\n{\n\t${0:/* code */}\n}\n",
		"description": "else if(…)"
	},
	"ifelse": {
		"prefix": "ifelse",
		"body": "if(${1:/* condition */})\n{\n\t${2:/* code */}\n}\nelse\n{\n\t${0:/* code */}\n}\n",
		"description": "if(…) else"
	},
	"ifelif": {
		"prefix": "ifelif",
		"body": "if(${1:/* condition */})\n{\n\t${2:/* code */}\n}\nelse if(${3:/* condition */})\n{\n\t${4:/* code */}\n}\nelse\n{\n\t${0:/* code */}\n}\n",
		"description": "if(…) else if(…) else"
	},
	"forever": {
		"prefix": "forev",
		"body": "for(;;)\n{\n\t${0:/* code */}\n}\n",
		"description": "Forever Loop"
	},
	"return": {
		"prefix": "return",
		"body": "return ${1:/* code */};",
		"description": "return"
	},
	"#ifndef": {
		"prefix": "#ifndef",
		"body": "#ifndef ${1:/*define*/}\n#define ${1:/*define*/}\n${2:/* code */}\n#endif //${1:/*define*/}\n",
		"description": "ifndef (…)"
	},
	"#ifdef": {
		"prefix": "#ifdef",
		"body": "#ifdef ${1:/*define*/}\n ${2:/* code */}\n#endif //${1:/*define*/}\n",
		"description": "ifdef (…)"
	},
	"switch": {
		"prefix": "switch",
		"body": "switch (${1})\n{\ncase ${2: /*case*/}:\n\t${3:/* code */}\n\tbreak;\ndefault:\n\tbreak;\n}",
		"description": "switch {...}"
	},
	"case": {
		"prefix": "case",
		"body": "case ${1: /*case*/}:\n\t$2\n\tbreak;",
		"description": "case (...)"
	},
	"enum": {
		"prefix": "enum",
		"body": "enum ${1:MyEnum}\n{\n\t$2\n};\n",
		"description": "enum ..."
	},
	"struct": {
		"prefix": "struct",
		"body": "struct ${1:MyStruct}\n{\n\t$2\n};\n",
		"description": "struct ..."
	},
	"union": {
		"prefix": "union",
		"body": "union ${1:MyUnion}\n{\n\t$2\n};",
		"description": "union {...}"
	},
	"#include": {
		"prefix": "#include",
		"body": "#include \"$1\"",
		"description": "#include \"..\""
	},
	"#include<": {
		"prefix": "#include<",
		"body": "#include <$1>",
		"description": "#include <..>"
	},
	"#ifelif": {
		"prefix": "#ifelif",
		"body": "#if $1\n\t$3\n#elif $2\n\t$4\n#endif"
	}
}